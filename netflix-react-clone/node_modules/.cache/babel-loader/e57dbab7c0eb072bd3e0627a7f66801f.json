{"ast":null,"code":"var _jsxFileName = \"/Users/alejandroaboy/netflix-react-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport \"./Row.css\";\nimport requests from \"./requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst Youtube = Youtube;\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //console.log(request.data.results);\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]); //variable outside of the useEffect, its a dependency on change\n  // console.table(movies)\n\n  const opts = {\n    height: \"390\",\n    width: \"99%\",\n    playerVars: {\n      autoplay: 0\n    }\n  };\n\n  const handleClick = movie => {\n    // console.table(movie?.title)\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row_poster\",\n        src: `${base_url}${movie.back_path || movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/alejandroaboy/netflix-react-clone/src/Row.js"],"names":["React","useState","useEffect","axios","YouTube","movieTrailer","requests","base_url","Youtube","Row","title","fetchUrl","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","back_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,OAAO,GAAGA,OAAhB;;AAEA,SAASC,GAAT,OAAiC;AAAA;;AAAA,MAApB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAoB;AAE7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAec,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUP,QAAV,CAAtB,CADuB,CAEvB;;AACAE,MAAAA,SAAS,CAACI,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACL,QAAD,CARM,CAAT,CAL6B,CAab;AAEhB;;AAEA,QAAMU,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,KAFE;AAGTC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AAHH,GAAb;;AAQE,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAIb,UAAJ,EAAgB;AACdC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAFD,MAEO;AACLV,MAAAA,YAAY,CAAC,CAAAsB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEjB,KAAP,KAAgB,EAAjB,CAAZ,CACGkB,IADH,CACQC,GAAG,IAAI;AACX,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAlB,QAAAA,aAAa,CAACe,SAAS,CAACZ,GAAV,CAAc,GAAd,CAAD,CAAb;AACD,OAJH,EAIKgB,KAJL,CAIYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJtB;AAKD;AACF,GAXD;;AAaF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKzB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEKE,MAAM,CAAC0B,GAAP,CAAYX,KAAD,iBACR;AACI,QAAA,SAAS,EAAG,YADhB;AAGI,QAAA,GAAG,EAAG,GAAEpB,QAAS,GAAEoB,KAAK,CAACY,SAAN,IAAmBZ,KAAK,CAACa,aAC3C,EAJL;AAKI,QAAA,GAAG,EAAEb,KAAK,CAACc;AALf,SAESd,KAAK,CAACe,EAFf;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE5B,UAAlB;AAA8B,MAAA,IAAI,EAAEO;AAApC;AAAA;AAAA;AAAA;AAAA,YAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAxDQZ,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport \"./Row.css\"\nimport requests from \"./requests\"\n\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst Youtube = Youtube\n\nfunction Row({title, fetchUrl }) {\n\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(()=>{\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            //console.log(request.data.results);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]); //variable outside of the useEffect, its a dependency on change\n\n    // console.table(movies)\n\n    const opts = {\n        height: \"390\",\n        width: \"99%\",\n        playerVars: {\n          autoplay: 0,\n        }\n      }\n\n      const handleClick = (movie) => {\n        // console.table(movie?.title)\n        if (trailerUrl) {\n          setTrailerUrl('')\n        } else {\n          movieTrailer(movie?.title || \"\")\n            .then(url => {\n              const urlParams = new URLSearchParams(new URL(url).search);\n              setTrailerUrl(urlParams.get('v'));\n            }).catch((error) => console.log(error));\n        }\n      }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {/* row_posters */}\n                {movies.map((movie) => (\n                    <img \n                        className = \"row_poster\"\n                        key={movie.id} \n                        src={`${base_url}${movie.back_path || movie.backdrop_path\n                        }`} \n                        alt={movie.name}\n                        />\n                ))}\n            </div>\n           <Youtube videoId={trailerUrl} opts={opts} />       \n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}