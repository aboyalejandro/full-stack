[{"/Users/alejandroaboy/netflix-react-clone/src/index.js":"1","/Users/alejandroaboy/netflix-react-clone/src/App.js":"2","/Users/alejandroaboy/netflix-react-clone/src/reportWebVitals.js":"3","/Users/alejandroaboy/netflix-react-clone/src/Row.js":"4","/Users/alejandroaboy/netflix-react-clone/src/requests.js":"5","/Users/alejandroaboy/netflix-react-clone/src/axios.js":"6","/Users/alejandroaboy/netflix-react-clone/src/Navbar.js":"7","/Users/alejandroaboy/netflix-react-clone/src/Banner.js":"8"},{"size":500,"mtime":1636458406002,"results":"9","hashOfConfig":"10"},{"size":940,"mtime":1636805310940,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1636458406004,"results":"12","hashOfConfig":"10"},{"size":1222,"mtime":1636807624229,"results":"13","hashOfConfig":"10"},{"size":719,"mtime":1636805313653,"results":"14","hashOfConfig":"10"},{"size":135,"mtime":1636468413541,"results":"15","hashOfConfig":"10"},{"size":947,"mtime":1636806459775,"results":"16","hashOfConfig":"10"},{"size":1836,"mtime":1636805037424,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1pqstwk",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alejandroaboy/netflix-react-clone/src/index.js",[],["37","38"],"/Users/alejandroaboy/netflix-react-clone/src/App.js",["39"],"import logo from './logo.svg';\nimport './App.css';\nimport Row from \"./Row\"\nimport Navbar from \"./Navbar\"\nimport Banner from \"./Banner\"\nimport requests from \"./requests\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar/>\n      <Banner/>\n      <Row \n        title=\"NETFLIX ORIGINALS\" \n        fetchUrl={requests.fetchNetflixOriginals} \n        isLargeRow={true}\n        />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/> \n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/> \n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/> \n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/> \n      </div>\n  );\n}\n\nexport default App;\n","/Users/alejandroaboy/netflix-react-clone/src/reportWebVitals.js",[],"/Users/alejandroaboy/netflix-react-clone/src/Row.js",["40"],"import React, { useState, useEffect} from 'react'\nimport axios from './axios';\nimport \"./Row.css\"\nimport requests from \"./requests\"\n\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title, fetchUrl }) {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(()=>{\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            //console.log(request.data.results);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]); //variable outside of the useEffect, its a dependency on change\n\n    // console.table(movies)\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {/* row_posters */}\n                {movies.map((movie) => (\n                    <img \n                        className = \"row_poster\"\n                        key={movie.id} \n                        src={`${base_url}${movie.back_path || movie.backdrop_path\n                        }`} \n                        alt={movie.name}\n                        />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Row\n","/Users/alejandroaboy/netflix-react-clone/src/requests.js",[],"/Users/alejandroaboy/netflix-react-clone/src/axios.js",[],"/Users/alejandroaboy/netflix-react-clone/src/Navbar.js",[],"/Users/alejandroaboy/netflix-react-clone/src/Banner.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'requests' is defined but never used.","no-global-assign","no-unsafe-negation"]