{"version":3,"sources":["firebase.js","app/components/Header.js","features/appSlice.js","app/components/SidebarOption.js","app/components/Sidebar.js","app/components/ChatInput.js","app/components/Message.js","app/components/Chat.js","app/components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","src","photoURL","alt","displayName","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SideBarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","ChannelName","channelId","chatRef","useState","input","setInput","console","log","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","element","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35a4f5bb.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD-nnp9_LEgZH7KEUEWmc5MW1j6liFGMBA\",\n    authDomain: \"slack-clone-7b462.firebaseapp.com\",\n    projectId: \"slack-clone-7b462\",\n    storageBucket: \"slack-clone-7b462.appspot.com\",\n    messagingSenderId: \"833729418976\",\n    appId: \"1:833729418976:web:3e5ded0499e9c979bfa285\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebaseApp.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\nexport {auth, provider, db} ","import React from 'react'\nimport styled from \"styled-components\"\nimport {Avatar} from \"@material-ui/core\"\nimport AcessTimeIcon from \"@material-ui/icons/AccessTime\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport {useAuthState} from \"react-firebase-hooks/auth\"\nimport {auth} from \"../../firebase\"\n\nfunction Header() {\n    const [user] = useAuthState(auth);\n\n    //console.log(user)\n\n    return (\n        <HeaderContainer>\n            \n           <HeaderLeft>\n               <HeaderAvatar\n                onClick={() => auth.signOut()}\n                src={user?.photoURL}\n                alt={user?.displayName}\n               />\n               <AcessTimeIcon/>\n            </HeaderLeft>\n\n           <HeaderSearch>\n               <SearchIcon/>\n               <input placeholder=\"Search PAPAFAM\"/>\n            </HeaderSearch>\n\n           <HeaderRight>\n               <HelpOutlineIcon/>\n             </HeaderRight>\n\n        </HeaderContainer>\n    )\n}\n\nexport default Header\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    position: fixed;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0;\n    background-color: var(--slack-color);\n    color: white;\n`;\n\nconst HeaderLeft = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: center;\n    margin-left: 20px;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 30px;\n    }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n    cursor: pointer;\n    :hover {\n        opacity: 0.8;\n    }\n`;\n\nconst HeaderSearch = styled.div`\n    flex: 0.4;\n    opacity: 1;\n    border-radius: 6px;\n    text-align: center;\n    background-color: #421f44;\n    display: flex;\n    padding: 0 50px; \n    color: gray;\n    border: 1px gray solid; \n\n    > input {\n       background-color: transparent;\n       border: none;\n       text-align: center;\n       min-width: 30vw;\n       outline: none;\n       color: white;\n    }\n\n`;\nconst HeaderRight = styled.div`\n    flex: 0.3; \n    display: flex;\n    align-items: flex-end;\n\n    .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 20px;\n    }\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = state => state.app.roomId;\n\nexport default appSlice.reducer;","import React from 'react'\nimport styled from \"styled-components\"\nimport { db } from '../../firebase';\nimport {useDispatch} from \"react-redux\"\nimport {enterRoom} from \"../../features/appSlice\"\n\nfunction SidebarOption({Icon, title, addChannelOption, id}) {\n\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt('Please enter your channel name');\n        if (channelName) {\n            db.collection('rooms').add({\n                name: channelName,\n            });\n        }\n    }\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({\n                roomId: id,\n            }));\n        }\n    }\n\n    return (\n        <SidebarOptionContainer\n            onClick={addChannelOption ? addChannel : selectChannel}    \n        >\n            {Icon && <Icon fontSize=\"small\" style={{padding: 10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ): (\n                <SideBarOptionChannel>\n                    <span>#</span> {title}\n                </SideBarOptionChannel>\n            )} \n        </SidebarOptionContainer>\n    )\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    >h3 {\n        font-weight: 500;\n    }\n\n    >h3 > span {\n        padding: 15px;\n    }\n\n`;\n\nconst SideBarOptionChannel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;","import React from 'react'\nimport styled from \"styled-components\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport CreateIcon from \"@material-ui/icons/Create\"\nimport SidebarOption from \"./SidebarOption\"\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\"\nimport InboxIcon from \"@material-ui/icons/Inbox\"\nimport DraftsIcon from \"@material-ui/icons/Drafts\"\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\"\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\"\nimport AppsIcon from \"@material-ui/icons/Apps\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport {useCollection} from \"react-firebase-hooks/firestore\"\nimport { db } from '../../firebase';\nimport {auth} from \"../../firebase\"\nimport {useAuthState} from \"react-firebase-hooks/auth\"\n\n\nfunction Sidebar() {\n    const [user] = useAuthState(auth);\n\n    const [channels, loading, error] = useCollection(\n        db.collection('rooms'));\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>PAPA FAM HQ</h2>\n                    <h3>\n                        <FiberManualRecordIcon/>\n                        {user.displayName}\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon/>\n            </SidebarHeader>\n\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\"/>\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\"/>\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\"/>\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\"/>\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User Groups\"/>\n            <SidebarOption Icon={AppsIcon} title=\"Apps\"/>\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\"/>\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\"/>\n            <hr/>\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Show more\"/>\n            <hr/>\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\"/>\n                {channels?.docs.map(doc => (\n                    <SidebarOption \n                        key={doc.id} \n                        id={doc.id}\n                        title={doc.data().name}\n                        />\n                    ))}\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.div`\n    background-color: var(--slack-color);\n    color: white;\n    flex: 0.3;\n    border-top: 1px solid #49274b;\n    max-width: 260px;\n    margin-top: 60px;\n\n    >hr {\n        border: 1px solid #49274b;\n    }\n`;\n\nconst SidebarHeader = styled.div`\n    display: flex;\n    border-bottom: 1px solid #49274b;\n    padding: 13px;\n\n    > .MuiSvgIcon-root {\n        padding: 8px;\n        color: #49274b;\n        font-size: 18px;\n        background-color: white;\n        border-radius: 999px;\n    }\n`;\n\nconst SidebarInfo = styled.div`\n    flex: 1;\n\n    > h2 {\n        font-size: 15px;\n        font-weight: 900;\n        margin-bottom: 5px;\n    }\n\n    > h3 {\n        font-size: 13px;\n        display: flex;\n        font-weight: 400;\n        align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n        font-size: 14px;\n        margin-top: 1px;\n        color: green;\n        margin-right: 2px;\n    }\n`;\n\n","import React, {useRef, useState} from 'react'\nimport styled from \"styled-components\"\nimport {Button} from \"@material-ui/core\"\nimport {db} from \"../../firebase\"\nimport firebase from \"firebase\"\nimport {auth} from \"../../firebase\"\nimport {useAuthState} from \"react-firebase-hooks/auth\"\n\nfunction ChatInput({ChannelName, channelId, chatRef}) {\n    const [user] = useAuthState(auth);\n    // const inputRef = useRef(null);\n    const [input, setInput] = useState(\"\")\n    console.log(channelId)\n\n    const sendMessage = e => {\n        e.preventDefault();\n\n        if (!channelId) {\n            return false;\n        }\n\n        db.collection('rooms').doc(channelId).collection('messages')\n        .add({\n            message: input,\n            // message: input.current.value\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage: user.photoURL,\n            // userImage: \"\"\n        });\n\n        chatRef.current.scrollIntoView({\n            behavior: \"smooth\",\n        });\n\n        setInput(\"\")\n\n    };\n\n    return (\n        <ChatInputContainer>\n            <form>\n                <input\n                    value = {input}\n                    onChange={e => setInput(e.target.value)}\n                    // ref={inputRef}\n                    placeholder={`Message #${ChannelName}`}\n                />\n                <Button hidden type=\"submit\" onClick={sendMessage}> \n                    SEND \n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput\n\nconst ChatInputContainer = styled.div`\n    border-radius: 20px;\n\n    > form {\n        position: relative;\n        display: flex;\n        justify-content: center;\n    }\n\n    > form > input {\n        position: fixed;\n        bottom: 30px;\n        width: 60%;\n        border: 1px solid gray;\n        border-radius: 3px;\n        padding: 28px;\n        outline: none;\n    }\n\n    > form > button {\n        display: none !important;\n    }\n\n`","import React from 'react'\nimport styled from \"styled-components\"\n\nfunction Message({message, timestamp, user, userImage}) {\n\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"\"/>\n            <MessageInfo>\n                <h4>\n                    {user}{' '}\n                    <span>\n                        {new Date(timestamp?.toDate()).toUTCString()}\n                    </span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n\nexport default Message\n\nconst MessageContainer = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 15px;\n\n    > img {\n        height: 50px;\n        border-radius: 8px;\n    }\n`\n\nconst MessageInfo = styled.div`\n    padding-left: 10px;\n    \n    > h4 > span {\n        color: gray;\n        font-weight: 300;\n        margin-left: 4px;\n        font-size: 10px;\n    }\n`","import React, {useRef, useEffect} from 'react'\nimport styled from \"styled-components\"\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport {useSelector} from \"react-redux\"\nimport {selectRoomId} from \"../../features/appSlice\"\nimport ChatInput from \"./ChatInput\"\nimport {useCollection, useDocument} from \"react-firebase-hooks/firestore\"\nimport {db} from \"../../firebase\"\nimport Message from \"./Message\"\n\nfunction Chat() {\n    const chatRef = useRef(null)\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && \n        db.collection(\"rooms\").doc(roomId)\n    )\n\n    const [roomMessages, loading] = useCollection(\n        roomId && \n        db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n    );\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, loading])\n\n    //console.log(roomDetails).data())\n    //console.log(roomMessages)\n\n    return (\n        <ChatContainer>\n            {roomDetails && roomMessages && (\n                 <>\n                 <Header>\n                     <HeaderLeft>\n                         <h4><strong>#{roomDetails?.data().name}</strong></h4>\n                         <StarBorderOutlinedIcon/>\n                     </HeaderLeft>\n                     <HeaderRight>\n                         <p>\n                             <InfoOutlinedIcon/> Details\n                         </p>\n      \n                     </HeaderRight>\n                 </Header>\n      \n                  <ChatMessages>\n                      {roomMessages?.docs.map((doc) => {\n                          const {message, timestamp, user, userImage} = doc.data();\n                          return (\n                              <Message\n                                  key={doc.id}\n                                  message={message}\n                                  timestamp={timestamp}\n                                  user={user}\n                                  userImage={userImage}\n                              />\n                          );\n                      })}\n                      <ChatBottom ref={chatRef}/>\n                  </ChatMessages>\n                  <ChatInput\n                      chatRef = {chatRef}\n                      ChannelName={roomDetails?.data().name}\n                      channelId={roomId}    \n                  />\n                 </>\n            ) }\n           \n        </ChatContainer>        \n    )\n}\n\nexport default Chat\n\nconst ChatContainer = styled.div`\n    flex: 0.7;\n    flex-grow: 1;\n    overflow-y: scroll;\n    margin-top: 60px;\n`\nconst HeaderLeft = styled.div`\n    display: flex;\n    align-items: center;\n\n    > h4 {\n        display: flex;\n        text-transform: lowercase;\n        margin-right: 10px;\n    }\n\n    > h4 > .MuiSvgIcon-root {\n        margin-left: 10px;\n        font-size: 18px;\n    }\n\n`\nconst HeaderRight = styled.div`\n    > p {\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n    }\n\n    > p > .MuiSvgIcon-root {\n        margin-right: 5px !important;\n        font-size: 16px;\n    }\n\n`\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    border-bottom: 1px solid lightgray;\n`\n\nconst ChatMessages = styled.div`\n\n`\n\nconst ChatBottom = styled.div`\n    padding-bottom: 100px;\n`","import React from 'react'\nimport styled from \"styled-components\"\nimport {Button} from \"@material-ui/core\"\nimport { auth, provider } from '../../firebase';\n\nfunction Login() {\n\n    const signIn = (e) => {\n        e.preventDefault();\n        auth.signInWithPopup(provider)\n        .catch(error => alert(error.message))\n    };\n\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img \n                    src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\n                    alt=\"\" \n                />\n                <h1>Sign in to the PAPAFAM</h1>\n                <p>papa.slack.com</p>\n                <Button onClick={signIn}>\n                    Sign in with Google\n                </Button>\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n    background-color: #f8f8f8;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`\n\nconst LoginInnerContainer = styled.div`\n\n    padding: 100px;\n    text-align: center;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n\n> img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 48px;\n}\n\n> button {\n    margin-top: 50px;\n    text-transform: inherit !important;\n    background-color: #0a8d48 !important;\n    color: white;\n}\n\n`","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\nimport Header from \"./app/components/Header\"\nimport Sidebar from \"./app/components/Sidebar\"\nimport Chat from \"./app/components/Chat\"\nimport styled from \"styled-components\"\nimport {useAuthState} from \"react-firebase-hooks/auth\"\nimport {auth} from \"./firebase\"\nimport Login from \"./app/components/Login\"\nimport Spinner from \"react-spinkit\"\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img\n            src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\n            alt=\"\"\n          />\n\n          <Spinner\n            name=\"ball-spin-fade-loader\"\n            color=\"purple\"\n            fadeIn=\"none\"\n          />\n            </AppLoadingContents>\n      </AppLoading>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login/>\n        ) : (\n          <>\n          <Header/>\n          <AppBody>\n            <Sidebar/>\n            <Routes>\n              <Route path=\"/\" element={<Chat/>}/>\n            </Routes>\n          </AppBody>\n        </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst AppLoading = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  \n  > img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 48px;\n}\n`","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}