{"ast":null,"code":"var _jsxFileName = \"/Users/alejandroaboy/slack-clone/src/app/components/SidebarOption.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { db } from '../../firebase';\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from \"../../features/appSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidebarOption(_ref) {\n  _s();\n\n  let {\n    Icon,\n    title,\n    addChannelOption,\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt('Please enter your channel name');\n\n    if (channelName) {\n      db.collection('rooms').add({\n        name: channelName\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(enterRoom({\n        roomId: id\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarOptionContainer, {\n    onClick: addChannelOption ? addChannel : selectChannel,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      fontSize: \"small\",\n      style: {\n        padding: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }, this), Icon ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(SideBarOptionChannel, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), \" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SidebarOption, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SidebarOption;\nexport default SidebarOption;\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    >h3 {\n        font-weight: 500;\n    }\n\n    >h3 > span {\n        padding: 15px;\n    }\n\n`;\n_c2 = SidebarOptionContainer;\nconst SideBarOptionChannel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;\n_c3 = SideBarOptionChannel;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SidebarOption\");\n$RefreshReg$(_c2, \"SidebarOptionContainer\");\n$RefreshReg$(_c3, \"SideBarOptionChannel\");","map":{"version":3,"sources":["/Users/alejandroaboy/slack-clone/src/app/components/SidebarOption.js"],"names":["React","styled","db","useDispatch","enterRoom","SidebarOption","Icon","title","addChannelOption","id","dispatch","addChannel","channelName","prompt","collection","add","name","selectChannel","roomId","padding","SidebarOptionContainer","div","SideBarOptionChannel","h3"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;;AAEA,SAASC,aAAT,OAA4D;AAAA;;AAAA,MAArC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,gBAAd;AAAgCC,IAAAA;AAAhC,GAAqC;AAExD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,MAAM,CAAC,gCAAD,CAA1B;;AACA,QAAID,WAAJ,EAAiB;AACbV,MAAAA,EAAE,CAACY,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvBC,QAAAA,IAAI,EAAEJ;AADiB,OAA3B;AAGH;AACJ,GAPD;;AASA,QAAMK,aAAa,GAAG,MAAM;AACxB,QAAIR,EAAJ,EAAQ;AACJC,MAAAA,QAAQ,CAACN,SAAS,CAAC;AACfc,QAAAA,MAAM,EAAET;AADO,OAAD,CAAV,CAAR;AAGH;AACJ,GAND;;AAQA,sBACI,QAAC,sBAAD;AACI,IAAA,OAAO,EAAED,gBAAgB,GAAGG,UAAH,GAAgBM,aAD7C;AAAA,eAGKX,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACa,QAAAA,OAAO,EAAE;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHb,EAIKb,IAAI,gBACD;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YADC,gBAGD,QAAC,oBAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACoBA,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAnCQF,a;UAEYF,W;;;KAFZE,a;AAqCT,eAAeA,aAAf;AAEA,MAAMe,sBAAsB,GAAGnB,MAAM,CAACoB,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMD,sB;AAsBN,MAAME,oBAAoB,GAAGrB,MAAM,CAACsB,EAAG;AACvC;AACA;AACA,CAHA;MAAMD,oB","sourcesContent":["import React from 'react'\nimport styled from \"styled-components\"\nimport { db } from '../../firebase';\nimport {useDispatch} from \"react-redux\"\nimport {enterRoom} from \"../../features/appSlice\"\n\nfunction SidebarOption({Icon, title, addChannelOption, id}) {\n\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt('Please enter your channel name');\n        if (channelName) {\n            db.collection('rooms').add({\n                name: channelName,\n            });\n        }\n    }\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({\n                roomId: id,\n            }))\n        }\n    }\n\n    return (\n        <SidebarOptionContainer\n            onClick={addChannelOption ? addChannel : selectChannel}    \n        >\n            {Icon && <Icon fontSize=\"small\" style={{padding: 10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ): (\n                <SideBarOptionChannel>\n                    <span>#</span> {title}\n                </SideBarOptionChannel>\n            )} \n        </SidebarOptionContainer>\n    )\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    >h3 {\n        font-weight: 500;\n    }\n\n    >h3 > span {\n        padding: 15px;\n    }\n\n`;\n\nconst SideBarOptionChannel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;"]},"metadata":{},"sourceType":"module"}